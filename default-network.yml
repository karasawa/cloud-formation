AWSTemplateFormatVersion: "2010-09-09"

Description: default-network

Parameters:
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instance
    Type: "AWS::EC2::KeyPair::KeyName"
  IP:
    Description: IP address allowed to access EC2
    Type: String

Mappings:
  RegionMap:
    us-east-1:
      HVM64: ami-02f3f602d23f1659d
    us-west-1:
      HVM64: ami-06604eb73be76c003
    eu-west-1:
      HVM64: ami-0779c326801d5a843
    ap-northeast-1:
      HVM64: ami-067871d950411e643
    ap-southeast-1:
      HVM64: ami-0e2e292a9c4fb2f29

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
      - Key: Name
        Value: MyVpc
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: MyIgw
  NatGatewayEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: VPC
  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - NatGatewayEIP
          - AllocationId
      SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: MyNgw
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: AttachGateway
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: MyPublicRouteTable
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: AttachGateway
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: MyPrivateRouteTable
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PrivateRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway
  PublicSubnet:
    Type: AWS::EC2::Subnet
    DependsOn: AttachGateway
    Properties:
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: 'true'
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: MyPublicSubnet
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    DependsOn: AttachGateway
    Properties:
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: 'false'
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: MyPrivateSubnet
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable
  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

  PublicInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
      KeyName: !Ref KeyName
      InstanceType: t2.micro
      NetworkInterfaces:
      - AssociatePublicIpAddress: 'true'
        DeviceIndex: '0'
        SubnetId: !Ref PublicSubnet
        GroupSet:
        - !Ref PublicSecurityGroup
      UserData: !Base64 |
        #!/bin/bash
        sudo yum -y update
        sudo yum install -y git
      Tags:
      - Key: Name
        Value: MyPublicInstance
  PrivateInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
      KeyName: !Ref KeyName
      InstanceType: t2.micro
      NetworkInterfaces:
      - AssociatePublicIpAddress: 'false'
        DeviceIndex: '0'
        SubnetId: !Ref PrivateSubnet
        GroupSet:
        - !Ref PrivateSecurityGroup
      Tags:
      - Key: Name
        Value: MyPrivateInstance
  PublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: MyPublicSecurityGroup
      GroupDescription: Allow SSH and HTTP access only MyIP
      VpcId: !Ref VPC
      SecurityGroupIngress:
      #http
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: !Ref IP
      #ssh
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref IP
  PrivateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: MyPrivateSecurityGroup
      GroupDescription: Allow SSH access only MyIP
      VpcId: !Ref VPC
      SecurityGroupIngress:
      #ssh
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref IP

Outputs:
  EC2PublicIp:
    Value: !GetAtt PublicInstance.PublicIp
    Description: Public IP of EC2 instance